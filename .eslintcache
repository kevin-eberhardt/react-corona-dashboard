[{"/Users/kevin96e/Coding/corona-dashboard/src/index.js":"1","/Users/kevin96e/Coding/corona-dashboard/src/App.js":"2","/Users/kevin96e/Coding/corona-dashboard/src/Theme.js":"3","/Users/kevin96e/Coding/corona-dashboard/src/components/charts/GermanMap.js":"4","/Users/kevin96e/Coding/corona-dashboard/src/components/Header.js":"5","/Users/kevin96e/Coding/corona-dashboard/src/components/Footer.js":"6","/Users/kevin96e/Coding/corona-dashboard/src/components/Home.js":"7","/Users/kevin96e/Coding/corona-dashboard/src/components/charts/LineChart.js":"8"},{"size":196,"mtime":1603391021882,"results":"9","hashOfConfig":"10"},{"size":298,"mtime":1610109321708,"results":"11","hashOfConfig":"10"},{"size":642,"mtime":1603391021875,"results":"12","hashOfConfig":"10"},{"size":8875,"mtime":1610479950144,"results":"13","hashOfConfig":"10"},{"size":1178,"mtime":1610111372281,"results":"14","hashOfConfig":"10"},{"size":933,"mtime":1610111521981,"results":"15","hashOfConfig":"10"},{"size":4371,"mtime":1610471576536,"results":"16","hashOfConfig":"10"},{"size":2384,"mtime":1610479845088,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1fz19x5",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kevin96e/Coding/corona-dashboard/src/index.js",[],["36","37"],"/Users/kevin96e/Coding/corona-dashboard/src/App.js",[],"/Users/kevin96e/Coding/corona-dashboard/src/Theme.js",[],"/Users/kevin96e/Coding/corona-dashboard/src/components/charts/GermanMap.js",[],"/Users/kevin96e/Coding/corona-dashboard/src/components/Header.js",[],"/Users/kevin96e/Coding/corona-dashboard/src/components/Footer.js",[],"/Users/kevin96e/Coding/corona-dashboard/src/components/Home.js",["38","39","40","41","42"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from './Header';\nimport Footer from './Footer';\nimport GermanMap from './charts/GermanMap';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Home(props) {\n  const classes = useStyles();\n  \n  const [states, setStates] = useState([]);\n  const [selectedBL, setSelectedBL] = useState();\n  const [selectedLK, setSelectedLK] = useState();\n  const [isLoading, setLoading] = useState(true); \n  const [germany, setGermany] = useState(\n    {\n      cases: 0,\n      deaths: 0,\n      incidence: 0\n    })\n    const [germanTimeLine, setGermanTimeLine] = useState({\n      labels: [],\n      data: []\n    })\n\n  function  convertToDate(timestamp) {\n    var month;\n    var date = new Date(timestamp);\n    var year = date.getFullYear();\n    var m = date.getMonth();\n    if (m < 10) {\n      month = \"0\" + (m + 1)\n    }else {\n      month = m + 1\n    }\n    var day = date.getDate();\n    var hours = date.getHours();\n    return day + '-' + month + '-' + year;\n  }\n\n  async function getFaellejeAltersgruppe() {\n    let labels = [], data = [];\n    const request = await fetch(\"https://services7.arcgis.com/mOBPykOjAyBO2ZKk/arcgis/rest/services/Covid19_RKI_Sums/FeatureServer/0/query?f=json&where=Meldedatum%3Etimestamp%20%272020-03-01%2022%3A59%3A59%27%20AND%20Meldedatum%20NOT%20BETWEEN%20timestamp%20%272021-01-08%2023%3A00%3A00%27%20AND%20timestamp%20%272021-01-09%2022%3A59%3A59%27&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=ObjectId%2CSummeFall%2CMeldedatum&orderByFields=Meldedatum%20asc&resultOffset=32000&resultRecordCount=32000&resultType=standard&cacheHint=true\")\n    const json = await request.json()\n    const features = json.features;\n    features.forEach(f => {\n      let date = convertToDate(f.attributes.Meldedatum);\n      labels.push(date); \n      data.push(f.attributes.SummeFall)\n    })\n    setGermanTimeLine({data: data, labels: labels});\n  }\n\n  useEffect(()=>{\n    getFaellejeAltersgruppe();\n    var resultList = [], dumpList = [], germany = {cases: 0, deaths: 0, incidence: 0};\n    fetch(\"https://services7.arcgis.com/mOBPykOjAyBO2ZKk/arcgis/rest/services/RKI_Landkreisdaten/FeatureServer/0/query?where=1%3D1&outFields=county,BL,cases,deaths,cases7_per_100k,last_update&returnGeometry=false&outSR=4326&f=json\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n            var i = 0;\n            resultList = result.features;\n            resultList.forEach(item => {\n              dumpList.push({\n                id: i,\n                name: item.attributes.BL,\n                cases: parseInt(0),\n                deaths: parseInt(0),\n                incidence: parseInt(0),\n                lk: []\n              })\n              i += 1;\n            })\n            var blList = Array.from(new Set(dumpList.map(a => a.name))).map(name => {\n                return dumpList.find(a => a.name === name);\n              })\n            blList.forEach(bl => {\n              resultList.forEach(item => {\n                if(item.attributes.BL === bl.name) {\n                  germany.cases += item.attributes.cases;\n                  germany.deaths += item.attributes.deaths;\n                  bl.incidence += item.attributes.cases7_per_100k;\n                  bl.cases += item.attributes.cases;\n                  bl.deaths += item.attributes.deaths;\n                  bl.lk.push({\n                    name: item.attributes.county,\n                    cases: item.attributes.cases,\n                    deaths: item.attributes.deaths,\n                    incidence: item.attributes.cases7_per_100k\n                  });\n                }\n              })\n              bl.incidence = parseFloat(bl.incidence)/parseInt(bl.lk.length);\n              germany.incidence += bl.incidence;\n            })\n            germany.incidence = parseFloat(germany.incidence)/parseInt(blList.length);\n            setStates(blList);\n            setLoading(false);\n            setGermany(germany)\n        }\n      )\n  }, [])\n  return (\n    <div className={classes.root}>\n      <Header />\n      <GermanMap germany={germany} states={states} selectedBL={selectedBL} selectedLK={selectedLK} isLoading={isLoading} height={640}/>\n      <Footer />\n    </div>\n  );\n}","/Users/kevin96e/Coding/corona-dashboard/src/components/charts/LineChart.js",["43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":20,"column":22,"nodeType":"50","messageId":"51","endLine":20,"endColumn":35},{"ruleId":"48","severity":1,"message":"52","line":21,"column":22,"nodeType":"50","messageId":"51","endLine":21,"endColumn":35},{"ruleId":"48","severity":1,"message":"53","line":29,"column":12,"nodeType":"50","messageId":"51","endLine":29,"endColumn":26},{"ruleId":"48","severity":1,"message":"54","line":45,"column":9,"nodeType":"50","messageId":"51","endLine":45,"endColumn":14},{"ruleId":"55","severity":1,"message":"56","line":110,"column":6,"nodeType":"57","endLine":110,"endColumn":8,"suggestions":"58"},{"ruleId":"55","severity":1,"message":"59","line":76,"column":8,"nodeType":"57","endLine":76,"endColumn":15,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'setSelectedBL' is assigned a value but never used.","Identifier","unusedVar","'setSelectedLK' is assigned a value but never used.","'germanTimeLine' is assigned a value but never used.","'hours' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFaellejeAltersgruppe'. Either include it or remove the dependency array.","ArrayExpression",["63"],"React Hook useEffect has a missing dependency: 'getZeitlicherVerlauf'. Either include it or remove the dependency array.",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [getFaellejeAltersgruppe]",{"range":"69","text":"70"},"Update the dependencies array to be: [getZeitlicherVerlauf, props]",{"range":"71","text":"72"},[4134,4136],"[getFaellejeAltersgruppe]",[2305,2312],"[getZeitlicherVerlauf, props]"]